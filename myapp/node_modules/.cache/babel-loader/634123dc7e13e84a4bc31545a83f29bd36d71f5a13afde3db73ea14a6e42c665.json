{"ast":null,"code":"var _jsxFileName = \"/Users/damanarora/PROJECT/myapp/src/pages/Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../Orders.css';\nimport logo from '../logo.png';\nimport splash from '../splash-image.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Orders = props => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  function ordersWithId(id) {\n    return orders.filter(order => order.orderID === id);\n  }\n  ;\n  const handleComplete = orderID => {\n    if (window.confirm(\"Are you sure you have completed this order?\")) {\n      setOrders(orders.filter(order => order.orderID !== orderID));\n      // You would also want to update the database here to mark the order as completed\n    }\n  };\n\n  useEffect(() => {\n    // Fetch the orders from the database here\n    const fetchOrders = async () => {\n      const response = await fetch('https://localhost:3000/food_orders');\n      const data = await response.json();\n      setOrders(data);\n    };\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"the logo\",\n        className: \"header-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splash-div\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: splash,\n        alt: \"splash\",\n        className: \"splash-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Heading\",\n      children: \"Food Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-container\",\n      children: [...new Set(orders.map(order => order.orderID))].map(id => {\n        const timeOrdered = ordersWithId(id)[0].timeOrdered;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Order #\", id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"time-order\",\n            children: [\" Time Ordered: \", timeOrdered, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), ordersWithId(id).map(order => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Item: \", order.itemName, \" x \", order.itemQuantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"complete-button\",\n            onClick: () => handleComplete(id),\n            children: \"Complete Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Orders, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useState","useEffect","logo","splash","Orders","props","orders","setOrders","ordersWithId","id","filter","order","orderID","handleComplete","window","confirm","fetchOrders","response","fetch","data","json","Set","map","timeOrdered","itemName","itemQuantity"],"sources":["/Users/damanarora/PROJECT/myapp/src/pages/Orders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../Orders.css';\nimport logo from '../logo.png';\nimport splash from '../splash-image.jpg';\n\n\nconst Orders = (props) => {\n  const [orders, setOrders] = useState([]);\n\n  function ordersWithId(id) {\n    return orders.filter(order => order.orderID === id);\n  };\n\n  const handleComplete = (orderID) => {\n    if (window.confirm(\"Are you sure you have completed this order?\")) {\n      setOrders(orders.filter(order => order.orderID !== orderID));\n      // You would also want to update the database here to mark the order as completed\n    }\n  }\n\n  useEffect(() => {\n    // Fetch the orders from the database here\n    const fetchOrders = async () => {\n      const response = await fetch('https://localhost:3000/food_orders');\n      const data = await response.json();\n      setOrders(data);\n    };\n\n    fetchOrders();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} alt=\"the logo\" className=\"header-image\" />\n      </header>\n      <div className=\"splash-div\">\n        <img src={splash} alt=\"splash\" className=\"splash-image\" />\n      </div>\n      <h2 className=\"Heading\">Food Orders</h2>\n      <div className=\"order-container\">\n        { [...new Set(orders.map(order => order.orderID))].map(id => {\n          const timeOrdered = ordersWithId(id)[0].timeOrdered;\n          return (\n            <div className=\"order-box\" key={id}>\n              <h3>Order #{id}</h3>\n              <p className=\"time-order\"> Time Ordered: {timeOrdered} </p>\n              {ordersWithId(id).map(order => (\n                <>\n                  <p>Item: {order.itemName} x {order.itemQuantity}</p>\n                </>\n              ))}\n              <button className=\"complete-button\"onClick={() => handleComplete(id)}>Complete Order</button>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Orders;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}